(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{182:function(e,r,t){"use strict";t.d(r,"a",(function(){return p})),t.d(r,"b",(function(){return g}));var n=t(0),a=t.n(n);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),u=function(e){var r=a.a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},p=function(e){var r=u(e.components);return a.a.createElement(l.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},d=a.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),d=n,g=p["".concat(o,".").concat(d)]||p[d]||b[d]||i;return t?a.a.createElement(g,s(s({ref:r},l),{},{components:t})):a.a.createElement(g,s({ref:r},l))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=d;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},183:function(e,r,t){"use strict";function n(e){var r,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(r=0;r<e.length;r++)e[r]&&(t=n(e[r]))&&(a&&(a+=" "),a+=t);else for(r in e)e[r]&&(a&&(a+=" "),a+=r);return a}r.a=function(){for(var e,r,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(r=n(e))&&(a&&(a+=" "),a+=r);return a}},184:function(e,r,t){"use strict";var n=t(0),a=t(185);r.a=function(){var e=Object(n.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},185:function(e,r,t){"use strict";var n=t(0),a=Object(n.createContext)(void 0);r.a=a},187:function(e,r,t){"use strict";var n=t(0),a=t.n(n),i=t(184),o=t(183),s=t(53),c=t.n(s),l=37,u=39;r.a=function(e){var r=e.lazy,t=e.block,s=e.defaultValue,p=e.values,b=e.groupId,d=e.className,g=Object(i.a)(),f=g.tabGroupChoices,m=g.setTabGroupChoices,v=Object(n.useState)(s),h=v[0],O=v[1],y=n.Children.toArray(e.children);if(null!=b){var j=f[b];null!=j&&j!==h&&p.some((function(e){return e.value===j}))&&O(j)}var w=function(e){O(e),null!=b&&m(b,e)},k=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":t},d)},p.map((function(e){var r=e.value,t=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===r,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":h===r}),key:r,ref:function(e){return k.push(e)},onKeyDown:function(e){!function(e,r,t){switch(t.keyCode){case u:!function(e,r){var t=e.indexOf(r)+1;e[t]?e[t].focus():e[0].focus()}(e,r);break;case l:!function(e,r){var t=e.indexOf(r)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,r)}}(k,e.target,e)},onFocus:function(){return w(r)},onClick:function(){w(r)}},t)}))),r?Object(n.cloneElement)(y.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,r){return Object(n.cloneElement)(e,{key:r,hidden:e.props.value!==h})}))))}},188:function(e,r,t){"use strict";var n=t(0),a=t.n(n);r.a=function(e){var r=e.children,t=e.hidden,n=e.className;return a.a.createElement("div",{role:"tabpanel",hidden:t,className:n},r)}},243:function(e,r,t){"use strict";t.r(r),r.default=t.p+"assets/images/spring-initializer-a906245aeee5602ea82b7bb98a9a50bb.png"},89:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return l})),t.d(r,"toc",(function(){return u})),t.d(r,"default",(function(){return b}));var n=t(3),a=t(7),i=(t(0),t(182)),o=t(187),s=t(188),c={id:"spring-overview",title:"Spring Server Overview"},l={unversionedId:"server/spring-server/spring-overview",id:"server/spring-server/spring-overview",isDocsHomePage:!1,title:"Spring Server Overview",description:"graphql-kotlin-spring-server",source:"@site/docs/server/spring-server/spring-overview.mdx",slug:"/server/spring-server/spring-overview",permalink:"/graphql-kotlin/docs/server/spring-server/spring-overview",editUrl:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/website/docs/server/spring-server/spring-overview.mdx",version:"current",lastUpdatedBy:"Dariusz Kuc",lastUpdatedAt:1621323280,sidebar:"docs",previous:{title:"Subscriptions",permalink:"/graphql-kotlin/docs/server/server-subscriptions"},next:{title:"Writing Schemas with Spring",permalink:"/graphql-kotlin/docs/server/spring-server/spring-schema"}},u=[{value:"WebFlux vs WebMVC",id:"webflux-vs-webmvc",children:[]},{value:"Setup",id:"setup",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Default Routes",id:"default-routes",children:[]}],p={toc:u};function b(e){var r=e.components,c=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},p,c,{components:r,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/graphql-kotlin-spring-server"},"graphql-kotlin-spring-server"),"\nis a Spring Boot auto-configuration library that automatically configures beans required to start up a reactive GraphQL\nweb server."),Object(i.b)("h2",{id:"webflux-vs-webmvc"},"WebFlux vs WebMVC"),Object(i.b)("p",null,"This library is built on a ",Object(i.b)("a",{parentName:"p",href:"https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html"},"Spring WebFlux (reactive)")," stack which is a non-blocking alternative to a traditional ",Object(i.b)("a",{parentName:"p",href:"https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html"},"Spring Web MVC (servlet)")," based stack.\nSince the frameworks utilize different threading models they cannot and should not be intermixed.\nWhen building a GraphQL server using ",Object(i.b)("inlineCode",{parentName:"p"},"graphql-kotlin-spring-server")," all your queries and mutations should follow one of the supported ",Object(i.b)("a",{parentName:"p",href:"/graphql-kotlin/docs/schema-generator/execution/async-models"},"asynchronous execution models"),"."),Object(i.b)("h2",{id:"setup"},"Setup"),Object(i.b)("p",null,"The simplest way to create a new Kotlin Spring Boot app is by generating one using ",Object(i.b)("a",{parentName:"p",href:"https://start.spring.io/"},"Spring Initializr.")),Object(i.b)("p",null,Object(i.b)("img",{alt:"Image of https://start.spring.io/",src:t(243).default})),Object(i.b)("p",null,"Once you get the sample application setup locally, you will need to add ",Object(i.b)("inlineCode",{parentName:"p"},"graphql-kotlin-spring-server")," dependency:"),Object(i.b)(o.a,{defaultValue:"gradle",values:[{label:"Gradle Kotlin",value:"gradle"},{label:"Maven",value:"maven"}],mdxType:"Tabs"},Object(i.b)(s.a,{value:"gradle",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-kotlin"},'implementation("com.expediagroup", "graphql-kotlin-spring-server", latestVersion)\n'))),Object(i.b)(s.a,{value:"maven",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.expediagroup</groupId>\n    <artifactId>graphql-kotlin-spring-server</artifactId>\n    <version>${latestVersion}</version>\n</dependency>\n")))),Object(i.b)("h2",{id:"configuration"},"Configuration"),Object(i.b)("p",null,"At a minimum, in order for ",Object(i.b)("inlineCode",{parentName:"p"},"graphql-kotlin-spring-server")," to automatically configure your GraphQL web server you need to\nspecify a list of supported packages that can be scanned for exposing your schema objects through reflections."),Object(i.b)("p",null,"You can do this through the spring application config or by overriding the ",Object(i.b)("inlineCode",{parentName:"p"},"SchemaGeneratorConfig")," bean. See customization below."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'graphql:\n  packages:\n    - "com.your.package"\n')),Object(i.b)("h2",{id:"default-routes"},"Default Routes"),Object(i.b)("p",null,"Your newly created GraphQL server starts up with following preconfigured default routes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"/graphql")," - GraphQL server endpoint used for processing queries and mutations"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"/subscriptions")," - GraphQL server endpoint used for processing subscriptions"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"/sdl")," - Convenience endpoint that returns current schema in Schema Definition Language format"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"/playground")," - Prisma Labs ",Object(i.b)("a",{parentName:"li",href:"https://github.com/prisma-labs/graphql-playground"},"GraphQL Playground IDE")," endpoint")))}b.isMDXComponent=!0}}]);