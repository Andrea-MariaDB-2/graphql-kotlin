(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{105:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),l=(n(0),n(182)),i={id:"gradle-plugin",title:"Gradle Plugin",original_id:"gradle-plugin"},o={unversionedId:"plugins/gradle-plugin",id:"version-3.x.x/plugins/gradle-plugin",isDocsHomePage:!1,title:"Gradle Plugin",description:"GraphQL Kotlin Gradle Plugin provides functionality to introspect GraphQL schemas and generate a lightweight GraphQL HTTP client.",source:"@site/versioned_docs/version-3.x.x/plugins/gradle-plugin.md",slug:"/plugins/gradle-plugin",permalink:"/graphql-kotlin/docs/3.x.x/plugins/gradle-plugin",editUrl:"https://github.com/ExpediaGroup/graphql-kotlin/tree/master/website/versioned_docs/version-3.x.x/plugins/gradle-plugin.md",version:"3.x.x",lastUpdatedBy:"WonChul Heo",lastUpdatedAt:1621569203,sidebar:"version-3.x.x/docs",previous:{title:"Client Customization",permalink:"/graphql-kotlin/docs/3.x.x/client/client-customization"},next:{title:"Maven Plugin",permalink:"/graphql-kotlin/docs/3.x.x/plugins/maven-plugin"}},p=[{value:"Usage",id:"usage",children:[]},{value:"Extension",id:"extension",children:[]},{value:"Tasks",id:"tasks",children:[{value:"graphqlDownloadSDL",id:"graphqldownloadsdl",children:[]},{value:"graphqlGenerateClient",id:"graphqlgenerateclient",children:[]},{value:"graphqlGenerateTestClient",id:"graphqlgeneratetestclient",children:[]},{value:"graphqlIntrospectSchema",id:"graphqlintrospectschema",children:[]}]},{value:"Examples",id:"examples",children:[{value:"Downloading Schema SDL",id:"downloading-schema-sdl",children:[]},{value:"Introspecting Schema",id:"introspecting-schema",children:[]},{value:"Generating Client",id:"generating-client",children:[]},{value:"Generating Client with Custom Scalars",id:"generating-client-with-custom-scalars",children:[]},{value:"Generating Test Client",id:"generating-test-client",children:[]},{value:"Complete Minimal Configuration Example",id:"complete-minimal-configuration-example",children:[]},{value:"Complete Configuration Example",id:"complete-configuration-example",children:[]}]}],c={toc:p};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"GraphQL Kotlin Gradle Plugin provides functionality to introspect GraphQL schemas and generate a lightweight GraphQL HTTP client."),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"graphql-kotlin-gradle-plugin")," is published on Gradle ",Object(l.b)("a",{parentName:"p",href:"https://plugins.gradle.org/plugin/com.expediagroup.graphql"},"Plugin Portal"),".\nIn order to execute any of the provided tasks you need to first apply the plugin on your project."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nplugins {\n    id("com.expediagroup.graphql") version $graphQLKotlinVersion\n}\n\n')),Object(l.b)("h2",{id:"extension"},"Extension"),Object(l.b)("p",null,"GraphQL Kotlin Gradle Plugin uses an extension on the project named ",Object(l.b)("inlineCode",{parentName:"p"},"graphql")," of type\n",Object(l.b)("a",{parentName:"p",href:"https://github.com/ExpediaGroup/graphql-kotlin/blob/master/plugins/graphql-kotlin-gradle-plugin/src/main/kotlin/com/expediagroup/graphql/plugin/gradle/GraphQLPluginExtension.kt"},"GraphQLPluginExtension"),".\nThis extension can be used to configure global options instead of explicitly configuring individual tasks. Once extension\nis configured, it will automatically download SDL/run introspection to generate GraphQL schema and subsequently generate\nall GraphQL clients. GraphQL Extension should be used by default, except for cases where you need to only run individual\ntasks."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.graphql\n\ngraphql {\n  client {\n    // GraphQL server endpoint that will be used to for running introspection queries. Alternatively you can download schema directly from `sdlEndpoint`.\n    endpoint = "http://localhost:8080/graphql"\n    // GraphQL server SDL endpoint that will be used to download schema. Alternatively you can run introspection query against `endpoint`.\n    sdlEndpoint = "http://localhost:8080/sdl"\n    // Target package name to be used for generated classes.\n    packageName = "com.example.generated"\n    // Optional HTTP headers to be specified on an introspection query or SDL request.\n    headers["X-Custom-Header"] = "Custom-Header-Value"\n    // Boolean flag indicating whether or not selection of deprecated fields is allowed.\n    allowDeprecatedFields = false\n    // Custom GraphQL scalar to converter mapping containing information about corresponding Java type and converter that should be used to serialize/deserialize values.\n    converters["UUID"] = ScalarConverterMapping("java.util.UUID", "com.example.UUIDScalarConverter")\n    // List of query files to be processed.\n    queryFiles.add(file("${project.projectDir}/src/main/resources/queries/MyQuery.graphql"))\n    // Timeout configuration\n    timeout {\n        // Connect timeout in milliseconds\n        connect = 5_000\n        // Read timeout in milliseconds\n        read = 15_000\n    }\n  }\n}\n\n')),Object(l.b)("h2",{id:"tasks"},"Tasks"),Object(l.b)("p",null,"All ",Object(l.b)("inlineCode",{parentName:"p"},"graphql-kotlin-gradle-plugin")," tasks are grouped together under ",Object(l.b)("inlineCode",{parentName:"p"},"GraphQL")," task group and their names are prefixed with\n",Object(l.b)("inlineCode",{parentName:"p"},"graphql"),". You can find detailed information about GraphQL kotlin tasks by running Gradle ",Object(l.b)("inlineCode",{parentName:"p"},"help --task <taskName>")," task."),Object(l.b)("h3",{id:"graphqldownloadsdl"},"graphqlDownloadSDL"),Object(l.b)("p",null,"Task that attempts to download GraphQL schema in SDL format from the specified ",Object(l.b)("inlineCode",{parentName:"p"},"endpoint")," and saves the underlying\nschema file as ",Object(l.b)("inlineCode",{parentName:"p"},"schema.graphql")," under build directory. In general, this task provides limited functionality by itself\nand could be used as an alternative to ",Object(l.b)("inlineCode",{parentName:"p"},"graphqlIntrospectSchema")," to generate input for the subsequent\n",Object(l.b)("inlineCode",{parentName:"p"},"graphqlGenerateClient")," task."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Properties")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"endpoint")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null},"yes"),Object(l.b)("td",{parentName:"tr",align:null},"Target GraphQL server SDL endpoint that will be used to download schema.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"endpoint"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"headers")),Object(l.b)("td",{parentName:"tr",align:null},"Map","<","String, Any",">"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Optional HTTP headers to be specified on a SDL request.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"timeoutConfig")),Object(l.b)("td",{parentName:"tr",align:null},"TimeoutConfig"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Timeout configuration(in milliseconds) to download schema from SDL endpoint before we cancel the request.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Default value are:")," connect timeout = 5_000, read timeout = 15_000.",Object(l.b)("br",null))))),Object(l.b)("h3",{id:"graphqlgenerateclient"},"graphqlGenerateClient"),Object(l.b)("p",null,"Task that generates GraphQL Kotlin client and corresponding data classes based on the provided GraphQL queries that are\nevaluated against target Graphql schema. Individual clients with their specific data models are generated for each query\nfile and are placed under specified ",Object(l.b)("inlineCode",{parentName:"p"},"packageName"),". When this task is added to the project, either through explicit configuration\nor through the ",Object(l.b)("inlineCode",{parentName:"p"},"graphql")," extension, it will automatically configure itself as a dependency of a ",Object(l.b)("inlineCode",{parentName:"p"},"compileKotlin")," task and\nresulting generated code will be automatically added to the project main source set."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Properties")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"allowDeprecatedFields")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Boolean flag indicating whether selection of deprecated fields is allowed or not.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Default value is:")," ",Object(l.b)("inlineCode",{parentName:"td"},"false"),".",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"allowDeprecatedFields"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"converters")),Object(l.b)("td",{parentName:"tr",align:null},"Map","<","String, ScalarConverter",">"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Custom GraphQL scalar to converter mapping containing information about corresponding Java type and converter that should be used to serialize/deserialize values.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"packageName")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null},"yes"),Object(l.b)("td",{parentName:"tr",align:null},"Target package name for generated code.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"packageName"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"queryFiles")),Object(l.b)("td",{parentName:"tr",align:null},"FileCollection"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"List of query files to be processed. Instead of a list of files to be processed you can specify ",Object(l.b)("inlineCode",{parentName:"td"},"queryFileDirectory")," directory instead. If this property is specified it will take precedence over the corresponding directory property.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"queryFileDirectory")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Directory file containing GraphQL queries. Instead of specifying a directory you can also specify list of query file by using ",Object(l.b)("inlineCode",{parentName:"td"},"queryFiles")," property instead.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Default value is:")," ",Object(l.b)("inlineCode",{parentName:"td"},"src/main/resources"),".",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"queryFileDirectory"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFile")),Object(l.b)("td",{parentName:"tr",align:null},"File"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName")," or ",Object(l.b)("inlineCode",{parentName:"td"},"schemaFile")," has to be provided"),Object(l.b)("td",{parentName:"tr",align:null},"GraphQL schema file that will be used to generate client code.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName")," or ",Object(l.b)("inlineCode",{parentName:"td"},"schemaFile")," has to be provided"),Object(l.b)("td",{parentName:"tr",align:null},"Path to GraphQL schema file that will be used to generate client code.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName"),".")))),Object(l.b)("h3",{id:"graphqlgeneratetestclient"},"graphqlGenerateTestClient"),Object(l.b)("p",null,"Task that generates GraphQL Kotlin test client and corresponding data classes based on the provided GraphQL queries that are\nevaluated against target Graphql schema. Individual test clients with their specific data models are generated for each query\nfile and are placed under specified ",Object(l.b)("inlineCode",{parentName:"p"},"packageName"),". When this task is added to the project it will automatically configure\nitself as a dependency of a ",Object(l.b)("inlineCode",{parentName:"p"},"compileTestKotlin")," task and resulting generated code will be automatically added to the project\ntest source set."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Properties")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"allowDeprecatedFields")),Object(l.b)("td",{parentName:"tr",align:null},"Boolean"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Boolean flag indicating whether selection of deprecated fields is allowed or not.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Default value is:")," ",Object(l.b)("inlineCode",{parentName:"td"},"false"),".",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"allowDeprecatedFields"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"converters")),Object(l.b)("td",{parentName:"tr",align:null},"Map","<","String, ScalarConverter",">"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Custom GraphQL scalar to converter mapping containing information about corresponding Java type and converter that should be used to serialize/deserialize values.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"packageName")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null},"yes"),Object(l.b)("td",{parentName:"tr",align:null},"Target package name for generated code.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"packageName"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"queryFiles")),Object(l.b)("td",{parentName:"tr",align:null},"FileCollection"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"List of query files to be processed. Instead of a list of files to be processed you can specify ",Object(l.b)("inlineCode",{parentName:"td"},"queryFileDirectory")," directory instead. If this property is specified it will take precedence over the corresponding directory property.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"queryFileDirectory")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Directory file containing GraphQL queries. Instead of specifying a directory you can also specify list of query file by using ",Object(l.b)("inlineCode",{parentName:"td"},"queryFiles")," property instead.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Default value is:")," ",Object(l.b)("inlineCode",{parentName:"td"},"src/test/resources"),".",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"queryFileDirectory"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFile")),Object(l.b)("td",{parentName:"tr",align:null},"File"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName")," or ",Object(l.b)("inlineCode",{parentName:"td"},"schemaFile")," has to be provided"),Object(l.b)("td",{parentName:"tr",align:null},"GraphQL schema file that will be used to generate client code.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName")," or ",Object(l.b)("inlineCode",{parentName:"td"},"schemaFile")," has to be provided"),Object(l.b)("td",{parentName:"tr",align:null},"Path to GraphQL schema file that will be used to generate client code.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"schemaFileName"),".")))),Object(l.b)("h3",{id:"graphqlintrospectschema"},"graphqlIntrospectSchema"),Object(l.b)("p",null,"Task that executes GraphQL introspection query against specified ",Object(l.b)("inlineCode",{parentName:"p"},"endpoint")," and saves the underlying schema file as\n",Object(l.b)("inlineCode",{parentName:"p"},"schema.graphql")," under build directory. In general, this task provides limited functionality by itself and instead\nshould be used to generate input for the subsequent ",Object(l.b)("inlineCode",{parentName:"p"},"graphqlGenerateClient")," task."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Properties")),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Property"),Object(l.b)("th",{parentName:"tr",align:null},"Type"),Object(l.b)("th",{parentName:"tr",align:null},"Required"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"endpoint")),Object(l.b)("td",{parentName:"tr",align:null},"String"),Object(l.b)("td",{parentName:"tr",align:null},"yes"),Object(l.b)("td",{parentName:"tr",align:null},"Target GraphQL server endpoint that will be used to execute introspection queries.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Command line property is"),": ",Object(l.b)("inlineCode",{parentName:"td"},"endpoint"),".")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"headers")),Object(l.b)("td",{parentName:"tr",align:null},"Map","<","String, Any",">"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Optional HTTP headers to be specified on an introspection query.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"timeoutConfig")),Object(l.b)("td",{parentName:"tr",align:null},"TimeoutConfig"),Object(l.b)("td",{parentName:"tr",align:null}),Object(l.b)("td",{parentName:"tr",align:null},"Timeout configuration(in milliseconds) to download schema from SDL endpoint before we cancel the request.",Object(l.b)("br",null),Object(l.b)("strong",{parentName:"td"},"Default value are:")," connect timeout = 5_000, read timeout = 15_000.",Object(l.b)("br",null))))),Object(l.b)("h2",{id:"examples"},"Examples"),Object(l.b)("h3",{id:"downloading-schema-sdl"},"Downloading Schema SDL"),Object(l.b)("p",null,"GraphQL endpoints are often public and as such many servers might disable introspection queries in production environment.\nSince GraphQL schema is needed to generate type safe clients, as alternative GraphQL servers might expose private\nendpoints (e.g. accessible only from within network, etc) that could be used to download schema in Schema Definition\nLanguage (SDL) directly. ",Object(l.b)("inlineCode",{parentName:"p"},"graphqlDownloadSDL")," task requires target GraphQL server ",Object(l.b)("inlineCode",{parentName:"p"},"endpoint")," to be specified and can\nbe executed directly from the command line by explicitly passing ",Object(l.b)("inlineCode",{parentName:"p"},"endpoint")," parameter"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'\n$ gradle graphqlDownloadSDL --endpoint="http://localhost:8080/sdl"\n\n')),Object(l.b)("p",null,"Task can also be explicitly configured in your Gradle build file"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLDownloadSDLTask\n\nval graphqlDownloadSDL by tasks.getting(GraphQLDownloadSDLTask::class) {\n    endpoint.set("http://localhost:8080/sdl")\n}\n\n')),Object(l.b)("p",null,">"," NOTE: This task does not automatically configure itself to be part of your build lifecycle. You will need to explicitly\n",">"," invoke it OR configure it as a dependency of some other task."),Object(l.b)("h3",{id:"introspecting-schema"},"Introspecting Schema"),Object(l.b)("p",null,"Introspection task requires target GraphQL server ",Object(l.b)("inlineCode",{parentName:"p"},"endpoint")," to be specified. Task can be executed directly from the\ncommand line by explicitly passing endpoint parameter"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'\n$ gradle graphqlIntrospectSchema --endpoint="http://localhost:8080/graphql"\n\n')),Object(l.b)("p",null,"Task can also be explicitly configured in your Gradle build file"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLGenerateClientTask\n\nval graphqlIntrospectSchema by tasks.getting(GraphQLIntrospectSchemaTask::class) {\n    endpoint.set("http://localhost:8080/graphql")\n}\n\n')),Object(l.b)("p",null,">"," NOTE: This task does not automatically configure itself to be part of your build lifecycle. You will need to explicitly\n",">"," invoke it OR configure it as a dependency of some other task."),Object(l.b)("h3",{id:"generating-client"},"Generating Client"),Object(l.b)("p",null,"GraphQL Kotlin client code is generated based on the provided queries that will be executed against target GraphQL ",Object(l.b)("inlineCode",{parentName:"p"},"schemaFile"),".\nSeparate class is generated for each provided GraphQL query and are saved under specified ",Object(l.b)("inlineCode",{parentName:"p"},"packageName"),". When using default\nconfiguration and storing GraphQL queries under ",Object(l.b)("inlineCode",{parentName:"p"},"src/main/resources")," directories, task can be executed directly from the\ncommand line by explicitly providing required properties."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'\n$ gradle graphqlGenerateClient --schemaFileName"mySchema.graphql" --packageName="com.example.generated"\n\n')),Object(l.b)("p",null,"Task can also be explicitly configured in your Gradle build file"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLGenerateClientTask\n\nval graphqlGenerateClient by tasks.getting(GraphQLGenerateClientTask::class) {\n  packageName.set("com.example.generated")\n  schemaFileName.set("mySchema.graphql")\n}\n\n')),Object(l.b)("p",null,"This will process all GraphQL queries located under ",Object(l.b)("inlineCode",{parentName:"p"},"src/main/resources")," and generate corresponding GraphQL Kotlin clients.\nGenerated classes will be automatically added to the project compile sources."),Object(l.b)("h3",{id:"generating-client-with-custom-scalars"},"Generating Client with Custom Scalars"),Object(l.b)("p",null,"By default, all custom GraphQL scalars will be serialized as Strings. You can override this default behavior by specifying\ncustom ",Object(l.b)("a",{parentName:"p",href:"https://github.com/ExpediaGroup/graphql-kotlin/blob/master/graphql-kotlin-client/src/main/kotlin/com/expediagroup/graphql/client/converter/ScalarConverter.kt"},"scalar converter"),"."),Object(l.b)("p",null,"For example given following custom scalar in our GraphQL schema"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-graphql"},"\nscalar UUID\n\n")),Object(l.b)("p",null,"We can create a custom converter to automatically convert this custom scalar to ",Object(l.b)("inlineCode",{parentName:"p"},"java.util.UUID")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},"\npackage com.example\n\nimport com.expediagroup.graphql.client.converter.ScalarConverter\nimport java.util.UUID\n\nclass UUIDScalarConverter : ScalarConverter<UUID> {\n    override fun toScalar(rawValue: String): UUID = UUID.fromString(rawValue)\n    override fun toJson(value: UUID): String = value.toString()\n}\n\n")),Object(l.b)("p",null,"Afterwards we need to configure our plugin to use this custom converter"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLGenerateClientTask\n\nval graphqlGenerateClient by tasks.getting(GraphQLGenerateClientTask::class) {\n  packageName.set("com.example.generated")\n  schemaFileName.set("mySchema.graphql")\n  converters.put("UUID", ScalarConverterMapping("java.util.UUID", "com.example.UUIDScalarConverter"))\n}\n\n')),Object(l.b)("h3",{id:"generating-test-client"},"Generating Test Client"),Object(l.b)("p",null,"GraphQL Kotlin test client code is generated based on the provided queries that will be executed against target GraphQL ",Object(l.b)("inlineCode",{parentName:"p"},"schemaFile"),".\nSeparate class is generated for each provided GraphQL query and are saved under specified ",Object(l.b)("inlineCode",{parentName:"p"},"packageName"),". When using default\nconfiguration and storing GraphQL queries under ",Object(l.b)("inlineCode",{parentName:"p"},"src/test/resources")," directories, task can be executed directly from the\ncommand line by explicitly providing required properties."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell",metastring:"script",script:!0},'\n$ gradle graphqlGenerateTestClient --schemaFileName"mySchema.graphql" --packageName="com.example.generated"\n\n')),Object(l.b)("p",null,"Task can also be explicitly configured in your Gradle build file"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLGenerateClientTask\n\nval graphqlGenerateTestClient by tasks.getting(GraphQLGenerateClientTask::class) {\n  packageName.set("com.example.generated")\n  schemaFileName.set("mySchema.graphql")\n}\n\n')),Object(l.b)("p",null,"This will process all GraphQL queries located under ",Object(l.b)("inlineCode",{parentName:"p"},"src/test/resources")," and generate corresponding GraphQL Kotlin clients.\nGenerated classes will be automatically added to the project test compile sources."),Object(l.b)("p",null,">"," NOTE: ",Object(l.b)("inlineCode",{parentName:"p"},"graphqlGenerateTestClient")," cannot be configured through the ",Object(l.b)("inlineCode",{parentName:"p"},"graphql")," extension and has to be explicitly configured."),Object(l.b)("h3",{id:"complete-minimal-configuration-example"},"Complete Minimal Configuration Example"),Object(l.b)("p",null,"Following is the minimal configuration that runs introspection query against a target GraphQL server and generates a\ncorresponding schema. This generated schema is subsequently used to generate GraphQL client code based on the queries\nprovided under ",Object(l.b)("inlineCode",{parentName:"p"},"src/main/resources")," directory."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.graphql\n\ngraphql {\n  client {\n    endpoint = "http://localhost:8080/graphql"\n    packageName = "com.example.generated"\n  }\n}\n\n')),Object(l.b)("p",null,"Above configuration is equivalent to the following"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLGenerateClientTask\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLIntrospectSchemaTask\n\nval graphqlIntrospectSchema by tasks.getting(GraphQLIntrospectSchemaTask::class) {\n  endpoint.set("http://localhost:8080/graphql")\n}\nval graphqlGenerateClient by tasks.getting(GraphQLGenerateClientTask::class) {\n  packageName.set("com.example.generated")\n  schemaFile.set(graphqlIntrospectSchema.outputFile)\n  dependsOn("graphqlIntrospectSchema")\n}\n\n')),Object(l.b)("h3",{id:"complete-configuration-example"},"Complete Configuration Example"),Object(l.b)("p",null,"Following is a configuration example that downloads schema SDL from a target GraphQL server that is then used to generate\nthe GraphQL client code based on the provided query."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.config.TimeoutConfig\nimport com.expediagroup.graphql.plugin.generator.ScalarConverterMapping\nimport com.expediagroup.graphql.plugin.gradle.graphql\n\ngraphql {\n  client {\n    sdlEndpoint = "http://localhost:8080/sdl"\n    packageName = "com.example.generated"\n    // optional configuration\n    allowDeprecatedFields = true\n    headers["X-Custom-Header"] = "My-Custom-Header"\n    converters["UUID"] = ScalarConverterMapping("java.util.UUID", "com.example.UUIDScalarConverter")\n    queryFiles.add(file("${project.projectDir}/src/main/resources/queries/MyQuery.graphql"))\n    timeout {\n        connect = 10_000\n        read = 30_000\n    }\n  }\n}\n\n')),Object(l.b)("p",null,"Above configuration is equivalent to the following"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-kotlin"},'\n// build.gradle.kts\nimport com.expediagroup.graphql.plugin.config.TimeoutConfig\nimport com.expediagroup.graphql.plugin.generator.ScalarConverterMapping\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLDownloadSDLTask\nimport com.expediagroup.graphql.plugin.gradle.tasks.GraphQLIntrospectSchemaTask\n\nval graphqlDownloadSDL by tasks.getting(GraphQLDownloadSDLTask::class) {\n    endpoint.set("http://localhost:8080/sdl")\n    headers.put("X-Custom-Header", "My-Custom-Header")\n    timeoutConfig.set(TimeoutConfig(connect = 10_000, read = 30_000))\n}\nval graphqlGenerateClient by tasks.getting(GraphQLGenerateClientTask::class) {\n    packageName.set("com.example.generated")\n    schemaFile.set(graphqlDownloadSDL.outputFile)\n    // optional\n    allowDeprecatedFields.set(true)\n    converters.put("UUID", ScalarConverterMapping("java.util.UUID", "com.example.UUIDScalarConverter"))\n    queryFiles.from("${project.projectDir}/src/main/resources/queries/MyQuery.graphql")\n\n    dependsOn("graphqlDownloadSDL")\n}\n\n')))}d.isMDXComponent=!0},182:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=d(n),u=a,g=s["".concat(i,".").concat(u)]||s[u]||b[u]||l;return n?r.a.createElement(g,o(o({ref:t},c),{},{components:n})):r.a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);